{"version":3,"sources":["modules/tasks/pages/tasks-page.tsx"],"names":["TaskPageWrapper","styled","div","commonStyles","navResultContentBlock","StyledWithToolbar","WithToolbar","selectThemeSemantics","borderRadius","curvedSmall","props","$hideToolbar","css","useMaxPrimaryItems","windowWidth","useWindowSize","TasksPage","urlSearchParams","useURLQueryParams","taskFilterQueryParams","groupBy","gridView","hideToolbar","useWCEmbedURLParams","isMD","isLG","useDisplaySizeGroup","translate","useTranslate","selectCurrentUserDetails","useConfigScopeSelectors","userDetails","viewName","viewId","useViewInfo","customMenuItems","useCustomMenuItems","noViewPermission","toLowerCase","findIndex","item","id","dir","useDirection","maxPrimaryItems","isSharepointEnabled","isOffice365AppEnabled","useSharepointSettings","React","useEffect","setTimeout","resizeSharepointParentWindow","resizeSPWebPartDelay","gridViewCheck","useCallback","filters","helpLinkId","useMemo","maxPrimaryItemsByDirection","undefined","renderToolbar","message","useSeparator","separatorGap","overflow","taskType","department","trim","path","element","actionType","viewType"],"mappings":"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","file":"static/js/18.26eeaff3.chunk.js","sourcesContent":["import React, { useCallback } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport { useDisplaySizeGroup, WithToolbar, selectThemeSemantics, useDirection } from '@agilepoint/wat-react-ux';\r\nimport { useURLQueryParams, useWCEmbedURLParams } from 'lib/hooks';\r\nimport { CancelProcessFlyoutContainer } from 'modules/processes/containers';\r\nimport { TasksToolbar } from '../components/parts/toolbar';\r\nimport { taskFilterQueryParams } from '../defaults';\r\nimport {\r\n    TakeAssignmentContainer, TaskReworkFlyoutContainer, TaskReassignFlyoutContainer, CreateLinkedWorkItemFlyoutContainer, ReleaseToPoolFlyoutContainer,\r\n    TaskDetailsFlyoutContainer, TasksGridViewContainer, TasksContentContainer, CompleteTaskContainer, CancelTaskContainer\r\n} from '../containers';\r\nimport { commonStyles, NoAccessRights, WCBreadCrumbWithRefresh, WithFlyoutHost, WithPopupHost } from 'common';\r\nimport { TasksScopeRegistrar } from '../scopes/tasks-scope';\r\nimport { useTranslate } from '@agilepoint/wat-react';\r\nimport { useConfigScopeSelectors } from 'modules/core/scopes';\r\nimport { AdvanceFiltersContainer } from 'advance-filters';\r\nimport { EditViewContainer, SaveViewContainer, useViewInfo } from 'custom-views';\r\nimport { useCustomMenuItems } from 'modules/core/providers/menu-item-provider';\r\nimport { TasksTabsScopeRegistrar } from '../scopes/tasks-tabs-scope';\r\nimport { ProcessesScopeRegistrar } from 'modules/processes/scopes/processes-scopes';\r\nimport { ViewProcessFlyout } from '../components/parts';\r\nimport { useWindowSize } from 'lib/window-size';\r\nimport { resizeSharepointParentWindow, resizeSPWebPartDelay, useSharepointSettings } from 'common/sharepoint';\r\n\r\nconst TaskPageWrapper = styled.div`\r\n    ${commonStyles.navResultContentBlock}\r\n    height: calc(100% - 32px);\r\n`;\r\n\r\nconst StyledWithToolbar = styled(WithToolbar) <{ $hideToolbar: boolean }>`\r\n    border-radius: ${selectThemeSemantics(({ borderRadius }) => borderRadius.curvedSmall)};\r\n    box-shadow: none;\r\n    /* display: ${(props) => (props.$hideToolbar ? 'none' : 'flex')}; */\r\n    ${({ $hideToolbar }) => $hideToolbar && css`display:none;`}\r\n`;\r\n\r\nexport const useMaxPrimaryItems = () => {\r\n    const { windowWidth } = useWindowSize();\r\n\r\n    //Note: The right side values are differnt resolutions\r\n    if (windowWidth <= 1366) {\r\n        return 5;\r\n    } else if (windowWidth <= 1400) {\r\n        return 6;\r\n    } else if (windowWidth <= 1440) {\r\n        return 7;\r\n    } else if (windowWidth <= 1600) {\r\n        return 8;\r\n    } else if (windowWidth <= 1680) {\r\n        return 9;\r\n    }\r\n    return 10;\r\n\r\n};\r\n\r\nexport default function TasksPage() {\r\n    const urlSearchParams = useURLQueryParams(taskFilterQueryParams);\r\n    const { groupBy, gridView } = urlSearchParams;\r\n    const { hideToolbar } = useWCEmbedURLParams();\r\n    const { isMD, isLG } = useDisplaySizeGroup();\r\n    const translate = useTranslate();\r\n    const { selectCurrentUserDetails } = useConfigScopeSelectors();\r\n    const userDetails = selectCurrentUserDetails();\r\n    const [viewName, viewId] = useViewInfo();\r\n    const customMenuItems = useCustomMenuItems();\r\n    const noViewPermission = viewName.toLowerCase() !== 'tasks' && customMenuItems.findIndex(item => item.id === viewId) < 0;\r\n    const dir = useDirection();\r\n    const maxPrimaryItems = useMaxPrimaryItems();\r\n    const { isSharepointEnabled, isOffice365AppEnabled } = useSharepointSettings();\r\n\r\n    React.useEffect(() => {\r\n        if (isSharepointEnabled && isOffice365AppEnabled) {\r\n            setTimeout(() => {\r\n                resizeSharepointParentWindow('800');\r\n            }, resizeSPWebPartDelay);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const gridViewCheck = React.useCallback(() => (\r\n        <>\r\n            {(isMD || isLG) && gridView === 'true' ? <TasksGridViewContainer filters={urlSearchParams} groupBy={groupBy} /> : <TasksContentContainer groupBy={groupBy} />}\r\n        </>\r\n    ), [gridView, groupBy, isLG, isMD, urlSearchParams]);\r\n\r\n    const helpLinkId = React.useMemo(() => (gridView === 'true' ? 'TasksGridView' : 'Tasks'), [gridView]);\r\n    const maxPrimaryItemsByDirection = React.useMemo(() => (dir === 'rtl' ? maxPrimaryItems : undefined), [dir, maxPrimaryItems]);\r\n\r\n    const renderToolbar = useCallback(() => (\r\n        <>\r\n            {hideToolbar === 'true' ? null : <TasksToolbar />}\r\n        </>\r\n    ), [hideToolbar]);\r\n\r\n    return (\r\n        <>\r\n            {noViewPermission ? <NoAccessRights message=\"View unavailable\" /> :\r\n                <TasksScopeRegistrar>\r\n                    <WithPopupHost>\r\n                        <WithFlyoutHost>\r\n                            <TasksTabsScopeRegistrar>\r\n                                <TaskPageWrapper>\r\n                                    <WCBreadCrumbWithRefresh helpLinkId={helpLinkId} />\r\n                                    <StyledWithToolbar useSeparator separatorGap=\"18\" $hideToolbar={hideToolbar === 'true'} overflow=\"menu\" maxPrimaryItems={maxPrimaryItemsByDirection}>\r\n                                        {renderToolbar()}\r\n                                        {\r\n                                            (urlSearchParams.taskType === 'myDepartment' && !(userDetails.department && userDetails.department.trim())) ?\r\n                                                <NoAccessRights message={translate('common.messages.noDeptInUserProfile')} /> : gridViewCheck()\r\n                                        }\r\n                                    </StyledWithToolbar>\r\n                                    <Routes>\r\n                                        <Route key=\"createLinkedItemFrom\"\r\n                                            path={'/:workItemId/create-linked-workitem'}\r\n                                            element={<CreateLinkedWorkItemFlyoutContainer />} />\r\n                                        <Route key=\"take-assignment\"\r\n                                            path={'/:workItemId/take-assignment'}\r\n                                            element={<TakeAssignmentContainer />} />\r\n                                        <Route\r\n                                            key=\"take-assignment-open\"\r\n                                            path={'/:workItemId/take-assignment-open'}\r\n                                            element={<TakeAssignmentContainer actionType=\"takeAssignmentAndOpen\" />} />\r\n                                        <Route\r\n                                            key=\"task-rework-route\"\r\n                                            path={'/:processInstanceId/:activityInstanceId/rework'}\r\n                                            element={<TaskReworkFlyoutContainer />} />\r\n                                        <Route\r\n                                            key=\"cancel-process-route\"\r\n                                            path={'/:processInstanceId/cancel-process'}\r\n                                            element={<ProcessesScopeRegistrar>\r\n                                                <CancelProcessFlyoutContainer />\r\n                                            </ProcessesScopeRegistrar>} />\r\n                                        <Route\r\n                                            key=\"task-reassign-route\"\r\n                                            path={'/:workItemId/reassign'}\r\n                                            element={<TaskReassignFlyoutContainer />} />\r\n                                        <Route\r\n                                            key=\"process-viewer-route\"\r\n                                            path={'/:processInstanceId/:processDefinitionName/process-viewer-flyout'}\r\n                                            element={<ViewProcessFlyout />} />\r\n                                        <Route\r\n                                            key=\"task-details-route\"\r\n                                            path={'/:workItemId/details'}\r\n                                            element={<TaskDetailsFlyoutContainer />} />\r\n                                        <Route\r\n                                            key=\"release-to-pool-route\"\r\n                                            path={'/:workItemId/release-to-pool'}\r\n                                            element={<ReleaseToPoolFlyoutContainer />} />\r\n                                        <Route\r\n                                            key=\"cancel-Task\"\r\n                                            path={'/:workItemId/cancel-task'}\r\n                                            element={<CancelTaskContainer />} />\r\n                                        <Route\r\n                                            key=\"save-tasks-view\"\r\n                                            path={'/save-view'}\r\n                                            element={<SaveViewContainer viewType=\"tasks\" />} />\r\n                                        <Route\r\n                                            key=\"save-tasks-view\"\r\n                                            path={'/edit-view'}\r\n                                            element={<EditViewContainer viewType=\"tasks\" />} />\r\n                                        <Route\r\n                                            key=\"filters\"\r\n                                            path={'/filters'}\r\n                                            element={<AdvanceFiltersContainer viewType=\"tasks\" />} />\r\n                                        <Route\r\n                                            key=\"complete-task\"\r\n                                            path={'/:processInstanceId/:workItemId/complete-task'}\r\n                                            element={<CompleteTaskContainer />} />\r\n                                        <Route\r\n                                            key=\"take-assignment-complete-task\"\r\n                                            path={'/:processInstanceId/:workItemId/takeassignment-complete-task'}\r\n                                            element={<CompleteTaskContainer actionType=\"takeAssignmentAndComplete\" />} />\r\n                                    </Routes>\r\n                                </TaskPageWrapper>\r\n                            </TasksTabsScopeRegistrar>\r\n                        </WithFlyoutHost>\r\n                    </WithPopupHost>\r\n                </TasksScopeRegistrar>\r\n            }\r\n        </>\r\n    );\r\n}\r\n"],"sourceRoot":""}
